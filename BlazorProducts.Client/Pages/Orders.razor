@page "/orders"
@attribute [Authorize(Roles = "Administrator")]
@using BlazorProducts.Client.Component
@using BlazorProducts.Client.Component.OrderTable
@using BlazorProducts.Client.Component.ProductTable
@using Entities.Models
@using Entities.RequestFeatures
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager NavigationManager
@inject IDialogService DialogService


<MudDataGrid ServerData="GetServerData" @ref="_dataGrid" T="Order" MultiSelection="false" SortMode="SortMode.Multiple" Filterable="true" Hideable="true">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Orders</MudText>
        <MudIconButton Icon="@Icons.Material.Filled.Add"
                       Color="Color.Default"
                       Size="Size.Medium"
                       @onclick="@(() => NavigationManager.NavigateTo("/orders/createOrder"))" />
        <MudSpacer />
        <MudTextField OnDebounceIntervalElapsed="OnSearch" Placeholder="Search" Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium"
                      Class="mt-0" T="string" DebounceInterval="500"></MudTextField>
    </ToolBarContent>
    <Columns>

        <HierarchyColumn T="Order" />
        <TemplateColumn Title="ID">
            <CellTemplate>
                <MudStack Row>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@((e) => OpenOrderDetailDialog(context.Item.Id))">@context.Item.Id</MudButton>
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
        <PropertyColumn Property="x => x.OrderDate" Title="Date" />
        <PropertyColumn Property="x => x.CustomerName" />
        <PropertyColumn Property="x => x.Status" />
        <TemplateColumn Filterable="false">
            <CellTemplate>
                <MudStack Row>
                    <MudSelect T="OrderStatus" Label="Action" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter"
                               Value="@context.Item.Status" ValueChanged="(e) => UpdateOrderStatus(context.Item, (int)Enum.Parse<OrderStatus>(e.ToString()))">
                        @foreach (OrderStatus status in Enum.GetValues(typeof(OrderStatus)))
                        {
                            <MudSelectItem Value="status" />
                        }
                    </MudSelect>
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
    <ChildRowContent>
        <OrderProductTable OrderProducts="@context.Item.OrderProducts" />
    </ChildRowContent>
    <PagerContent>
        <MudDataGridPager T="Order" PageSizeOptions="@_pageSizeOption" />
    </PagerContent>

</MudDataGrid>